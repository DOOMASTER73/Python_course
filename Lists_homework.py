# Valeriia Marynchenko
# Створення та обробка списків

# "###" - Дописати код

# Завдання 1
# Жив-був капелюх. У капелюсі не було кролика, натомість був список із п'яти чисел: 1, 2, 3, 4 та 5.

# Ваше завдання:

# напишіть рядок коду, що пропонує користувачеві замінити число всередині списку цілим числом, введеним 
# користувачем (крок 1)
# напишіть рядок коду, який видаляє останній елемент зі списку (крок 2)
# напишіть рядок коду, який друкує довжину існуючого списку (крок 3).
# Чи готові до цього випробування?
# ------------------------------------------------------------------------------------

hat_list = [1, 2, 3, 4, 5]  # This is an existing list of numbers hidden in the hat.

# Step 1: write a line of code that prompts the user
# to replace the middle number with an integer number entered by the user.
user_nunber = ###there is a string for input of user number
hat_list  ###there is a string for definition the middle of the list
print(hat_list)
# Step 2: write a line of code that removes the last element from the list.
del ###deleting items
print(hat_list)
# Step 3: write a line of code that prints the length of the existing list.
print(len(hat_list))

# ------------------------------------------------------------------------------------

# Сортування списків

# Поряд з можливістю реалізувати будь-який алгоритм сортування, у python існують вбудовані методи для 
# сортування списків.

my_list = [1, 7, 23, 34, 0]
my_list.sort()
print(my_list)
my_list.reverse()
print(my_list)

# ------------------------------------------------------------------------------------

# Завдання 2
# Написати програму сортування списку у порядку зростання методом бульбашки.

# ------------------------------------------------------------------------------------

my_list = [1, 4, 6, 2, 7, 3]

swapped = True

while swapped:
    for i in range(len(my_list) - 1):
        if my_list[i] > my_list[i +1]:
            swapped = True
            ### string for swapping elements
            
            print(my_list)

# ------------------------------------------------------------------------------------

# Конструкції in та not in

# Завдання 3

# Уявіть список - не дуже довгий, не дуже складний, просто звичайний список, що містить деякі цілі числа. 
# Деякі з цих чисел можуть повторюватись, і це ключ до розгадки. Ми не хочемо повторень. Ми хочемо, щоб їх 
# видалили.

# Ваше завдання – написати програму, яка видаляє всі дублікати чисел зі списку. Ціль полягає в тому, щоб
# скласти список, в якому всі числа зустрічаються не більше одного разу.

# Примітка: припустимо, що вихідний список жорстко закодований всередині коду - Вам не потрібно вводити його з
# клавіатури. Звичайно, Ви можете покращити код і додати частину, яка може вести діалог з користувачем і 
# отримувати від неї всі дані.

# Підказка: ми рекомендуємо Вам створити новий список як тимчасову робочу область - вам не потрібно оновлювати 
# список in.

# ------------------------------------------------------------------------------------

my_list = [1, 2, 4, 4, 1, 4, 2, 6, 2, 9]
list_1 = []

for i in range(len(my_list) - 1):
    if i not in list_1:
        ###string for swapping elements
print(my_list)
print("The list with unique elements only:")
print()###output unique elements
